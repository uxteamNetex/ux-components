{"version":3,"sources":["webpack:///./src/app/ui-pages/cards/cards-routing.module.ts","webpack:///./src/app/ui-pages/cards/cards.module.ts","webpack:///./src/app/ui-pages/cards/documentation/cards-doc.component.html","webpack:///./src/app/ui-pages/cards/documentation/cards-doc.component.scss","webpack:///./src/app/ui-pages/cards/documentation/cards-doc.component.ts","webpack:///./src/app/ui-pages/cards/examples/cards-examples.component.html","webpack:///./src/app/ui-pages/cards/examples/cards-examples.component.scss","webpack:///./src/app/ui-pages/cards/examples/cards-examples.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AACsB;AACL;AAExE,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,yFAAsB;KACpC;IACD;QACI,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,oFAAiB;KAC/B;IACD;QACI,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,UAAU;QACtB,SAAS,EAAE,MAAM;KACpB;CACJ,CAAC;AAMF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACzBgB;AACN;AAKX;AAE8B;AACY;AACK;AAa7E;IAAA;IAA2B,CAAC;IAAf,WAAW;QAXvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,mEAAc;gBACd,wEAAkB;aACnB;YACD,YAAY,EAAE;gBACZ,oFAAiB;gBACjB,yFAAsB;aACvB;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvBxB,+uB;;;;;;;;;;;ACAA,+DAA+D,+K;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IACI,CAAC;IAEL,oCAAQ,GAAR;IACA,CAAC;IANU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,kIAAyC;;SAE1C,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,wHAAwH,4BAA4B,gBAAgB,uBAAuB,wHAAwH,oDAAoD,gBAAgB,uBAAuB,sJ;;;;;;;;;;;ACA9Y,+DAA+D,+K;;;;;;;;;;;;;;;;;ACAb;AAYlD;IAYE;QAVA,cAAS,GAAe;YACtB;gBACE,KAAK,EAAE,QAAQ;gBACf,QAAQ,EAAE,mBAAmB;aAC9B;YACD;gBACE,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,kBAAkB;aAC7B;SAAC,CAAC;IAGD,CAAC;IAEL,yCAAQ,GAAR;IACA,CAAC;IAhBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,uIAA8C;;SAE/C,CAAC;;OACW,sBAAsB,CAiBlC;IAAD,6BAAC;CAAA;AAjBkC","file":"ui-pages-cards-cards-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CardsExamplesComponent } from './examples/cards-examples.component';\r\nimport { CardsDocComponent } from './documentation/cards-doc.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'examples',\r\n        component: CardsExamplesComponent\r\n    },\r\n    {\r\n        path: 'documentation',\r\n        component: CardsDocComponent\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: 'examples',\r\n        pathMatch: 'full'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CardsRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  NtxButtonsModule,\r\n  NtxCardsModule\r\n} from '@netex/ux-components';\r\n\r\nimport { CardsRoutingModule } from './cards-routing.module';\r\nimport { CardsDocComponent } from './documentation/cards-doc.component';\r\nimport { CardsExamplesComponent } from './examples/cards-examples.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NtxCardsModule,\r\n    CardsRoutingModule\r\n  ],\r\n  declarations: [\r\n    CardsDocComponent,\r\n    CardsExamplesComponent\r\n  ]\r\n})\r\nexport class CardsModule { }\r\n","module.exports = \"<div class=\\\"page-layout\\\">\\r\\n  <div class=\\\"page-container documentation\\\">\\r\\n    <h1 class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Cards</h1>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      ntx-card is a content container for text, photos, and actions in the context of a single subject.\\r\\n    </p>\\r\\n\\r\\n    <h1 class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Simple card</h1>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      Use <span class=\\\"documentation-code\\\">ntx-card-simple</span> if you need to include a content inside a card. If you want to specify a title and a subtitle in the card, just add the title and subtitle attributes.\\r\\n    </p>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpLXBhZ2VzL2NhcmRzL2RvY3VtZW50YXRpb24vY2FyZHMtZG9jLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cards-doc',\r\n  templateUrl: './cards-doc.component.html',\r\n  styleUrls: ['./cards-doc.component.scss']\r\n})\r\nexport class CardsDocComponent implements OnInit {\r\n  \r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-layout\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n\\r\\n    <ntx-card-simple title=\\\"{{'Simple card' | uppercase }}\\\" subtitle=\\\"{{ '<ntx-card-simple>' }}\\\">\\r\\n      <ntx-card-simple>Content</ntx-card-simple>\\r\\n    </ntx-card-simple>\\r\\n\\r\\n    <ntx-card-simple title=\\\"{{'Simple card with title and subtitle' | uppercase }}\\\" subtitle=\\\"{{ '<ntx-card-simple>' }}\\\">\\r\\n      <ntx-card-simple title=\\\"Title\\\" subtitle=\\\"Subtitle\\\">Content</ntx-card-simple>\\r\\n    </ntx-card-simple>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpLXBhZ2VzL2NhcmRzL2V4YW1wbGVzL2NhcmRzLWV4YW1wbGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nexport interface CardType {\r\n  label: string;\r\n  selector: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-cards-examples',\r\n  templateUrl: './cards-examples.component.html',\r\n  styleUrls: ['./cards-examples.component.scss']\r\n})\r\nexport class CardsExamplesComponent implements OnInit {\r\n  \r\n  cardTypes: CardType[] = [\r\n    { \r\n      label: \"simple\",\r\n      selector: \"<ntx-card-simple>\"\r\n    },\r\n    { \r\n      label: \"con t√≠tulo\",\r\n      selector: \"<ntx-card-title>\"\r\n    }];\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n"],"sourceRoot":""}