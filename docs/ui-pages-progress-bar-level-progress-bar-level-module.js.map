{"version":3,"sources":["webpack:///./src/app/ui-pages/progress-bar-level/documentation/documentation.component.html","webpack:///./src/app/ui-pages/progress-bar-level/documentation/documentation.component.scss","webpack:///./src/app/ui-pages/progress-bar-level/documentation/documentation.component.ts","webpack:///./src/app/ui-pages/progress-bar-level/examples/examples.component.html","webpack:///./src/app/ui-pages/progress-bar-level/examples/examples.component.scss","webpack:///./src/app/ui-pages/progress-bar-level/examples/examples.component.ts","webpack:///./src/app/ui-pages/progress-bar-level/progress-bar-level-routing.module.ts","webpack:///./src/app/ui-pages/progress-bar-level/progress-bar-level.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wpDAAwpD,SAAS,8aAA8a,SAAS,gbAAgb,SAAS,qJ;;;;;;;;;;;ACAjhF,+DAA+D,uM;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;QAKA,UAAK,GAAC,gdAcL,CAAC;QACF,UAAK,GAAC,grBAuBL,CAAC;QACF,UAAK,GAAC,+5BAwCL,CAAC;IApFc,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IALU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,uJAA6C;;SAE9C,CAAC;;OACW,sBAAsB,CAwFlC;IAAD,6BAAC;CAAA;AAxFkC;;;;;;;;;;;;ACPnC,mKAAmK,6CAA6C,gBAAgB,wCAAwC,2IAA2I,6CAA6C,gBAAgB,2DAA2D,oKAAoK,6CAA6C,gBAAgB,4DAA4D,qKAAqK,6CAA6C,gBAAgB,4DAA4D,qKAAqK,6CAA6C,gBAAgB,yCAAyC,qI;;;;;;;;;;;ACAj1C,+DAA+D,uL;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEC;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALW,iBAAiB;QAL7B,+DAAS,CAAC;YACV,QAAQ,EAAE,cAAc;YACxB,wIAAwC;;SAExC,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;ACPW;AACc;AACW;AACe;AAEjF,IAAM,MAAM,GAAW;IACtB;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8EAAiB;KAC7B;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,6FAAsB;KAClC;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,UAAU;QACtB,SAAS,EAAE,MAAM;KAClB;CACD,CAAC;AAMF;IAAA;IAA6C,CAAC;IAAjC,6BAA6B;QAJzC,8DAAQ,CAAC;YACT,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACvB,CAAC;OACW,6BAA6B,CAAI;IAAD,oCAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;ACzBD;AACM;AAKjB;AAEsD;AACH;AACf;AACX;AAYvD;IAAA;IAAsC,CAAC;IAA1B,sBAAsB;QAVlC,8DAAQ,CAAC;YACT,OAAO,EAAE;gBACR,4DAAY;gBACZ,yEAAoB;gBACpB,mEAAc;gBACd,gGAA6B;gBAC7B,oEAAkB;aAClB;YACD,YAAY,EAAE,CAAC,6FAAsB,EAAE,8EAAiB,CAAC;SACzD,CAAC;OACW,sBAAsB,CAAI;IAAD,6BAAC;CAAA;AAAJ","file":"ui-pages-progress-bar-level-progress-bar-level-module.js","sourcesContent":["module.exports = \"<div class=\\\"page-layout\\\">\\r\\n  <div class=\\\"page-container documentation\\\">\\r\\n    <h1 class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Progress bar level</h1>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      ntx-progress-bar is a horizontal progress-bar for indicating progress and activity.\\r\\n    </p>\\r\\n\\r\\n    <h1 class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Configuration</h1>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      Color attribute can be configured in each progress bar, just by adding the atribute <span class=\\\"documentation-code\\\">[color]</span> in the html tag. In .ts file we have added this variable as strings so it can be configured.\\r\\n    </p>\\r\\n\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      The primary color can be used by specifying it in color atribute <span class=\\\"documentation-code\\\">[color]=\\\"'primary'\\\"</span>. For secondary colors, you should use the accent value <span class=\\\"documentation-code\\\">[color]=\\\"'accent'\\\"</span>.\\r\\n    </p>\\r\\n\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      The value of the progress bar is shown by an atribute in the html. Feel free to change that in order to program its current value.\\r\\n    </p>\\r\\n\\r\\n    <div class=\\\"documentation-wrapper-pre\\\">\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              ux-components/src/lib/ntx-progress-bar/progress-bar-level/progress-bar-level.component.html\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <pre class=\\\"documentation-pre\\\">\\r\\n            <code> {{ code1 }} </code>\\r\\n          </pre>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              ux-components/src/lib/ntx-progress-bar/progress-bar-level/progress-bar-level.component.ts\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <pre class=\\\"documentation-pre\\\">\\r\\n            <code> {{ code2 }} </code>\\r\\n          </pre>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              ux-components/src/lib/ntx-progress-bar/progress-bar-level/progress-bar-level.component.scss\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <pre class=\\\"documentation-pre\\\">\\r\\n            <code> {{ code3 }} </code>\\r\\n          </pre>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n      </mat-accordion>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpLXBhZ2VzL3Byb2dyZXNzLWJhci1sZXZlbC9kb2N1bWVudGF0aW9uL2RvY3VtZW50YXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-documentation',\r\n  templateUrl: './documentation.component.html',\r\n  styleUrls: ['./documentation.component.scss']\r\n})\r\nexport class DocumentationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  code1=`\r\n    <div class=\"progress-bar-level\">\r\n    <div\r\n      *ngIf=\"requiredValue\"\r\n      class=\"progress-bar-level__required-value-mark utils--margin-bottom-4\"\r\n      [style.left]=\"requiredValue + '%'\"\r\n    ></div>\r\n    <mat-progress-bar\r\n      class=\"progress-bar-level__bar\"\r\n      [ngClass]=\"requiredValue ? value >= requiredValue ? 'success' : 'error' : color\"\r\n      [value]=\"value\"\r\n      [mode]=\"mode\"\r\n    ></mat-progress-bar>\r\n    </div>\r\n  `;\r\n  code2=`\r\n    import { Component, OnInit } from '@angular/core';\r\n    import { Input } from '@angular/core';\r\n    import { ViewEncapsulation } from '@angular/core';\r\n\r\n    @Component({\r\n    selector: 'ntx-progress-bar-level',\r\n    templateUrl: './progress-bar-level.component.html',\r\n    styleUrls: ['./progress-bar-level.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n    })\r\n    export class ProgressBarLevelComponent implements OnInit {\r\n\r\n    @Input() color: string;\r\n    @Input() value: number;\r\n    @Input() requiredValue: number;\r\n    @Input() mode: 'determinate' | 'indeterminate' | 'buffer' | 'query' = 'determinate';\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n}\r\n  `;\r\n  code3=`\r\n    @import \"././projects/netex/ux-components/src/styles/app/utils\";\r\n\r\n    $block: \"progress-bar-level\";\r\n\r\n    .#{$block} {\r\n\r\n    .#{$block}__required-value-mark {\r\n      width: 0;\r\n      position: relative;\r\n      transform: translateX(-5px);\r\n      border-width: 5px 5px 0 5px;\r\n      border-color: $color-grey-400 transparent transparent;\r\n      border-style: solid;\r\n      transition: left 0.25s ease-in-out;\r\n    }\r\n\r\n    .#{$block}__bar {\r\n      &.mat-progress-bar {\r\n        border-radius: 2px;\r\n        // height: 4px;\r\n\r\n        &.success {\r\n          .mat-progress-bar-fill:after {\r\n            background-color: $color-success;\r\n          }\r\n        }\r\n\r\n        &.error {\r\n          .mat-progress-bar-fill:after {\r\n            background-color: $color-error;\r\n          }\r\n        }\r\n\r\n        .mat-progress-bar-buffer {\r\n          background-color: $color-grey-200;\r\n        }\r\n      }\r\n    }\r\n    }\r\n  `;\r\n\r\n}\r\n","module.exports = \"<div class=\\\"page-layout\\\">\\r\\n  <div class=\\\"page-container utils--padding-left-16 utils--padding-right-16\\\">\\r\\n    <ntx-card-simple title=\\\"{{'Progress bar with level mark' | uppercase }}\\\" subtitle=\\\"{{ '<ntx-progress-bar-level [value]=0>' }}\\\">\\r\\n      <ntx-progress-bar-level [value]=\\\"'0'\\\"></ntx-progress-bar-level>\\r\\n    </ntx-card-simple>\\r\\n    <ntx-card-simple title=\\\"{{'Progress bar with level mark' | uppercase }}\\\" subtitle=\\\"{{ '<ntx-progress-bar-level [value]=0 [requiredValue]=50>' }}\\\">\\r\\n      <ntx-progress-bar-level [value]=\\\"'0'\\\" [requiredValue]=\\\"'50'\\\"></ntx-progress-bar-level>\\r\\n    </ntx-card-simple>\\r\\n    <ntx-card-simple title=\\\"{{'Progress bar with level mark' | uppercase }}\\\" subtitle=\\\"{{ '<ntx-progress-bar-level [value]=34 [requiredValue]=40>' }}\\\">\\r\\n      <ntx-progress-bar-level [value]=\\\"'34'\\\" [requiredValue]=\\\"'40'\\\"></ntx-progress-bar-level>\\r\\n    </ntx-card-simple>\\r\\n    <ntx-card-simple title=\\\"{{'Progress bar with level mark' | uppercase }}\\\" subtitle=\\\"{{ '<ntx-progress-bar-level [value]=80 [requiredValue]=65>' }}\\\">\\r\\n      <ntx-progress-bar-level [value]=\\\"'80'\\\" [requiredValue]=\\\"'65'\\\"></ntx-progress-bar-level>\\r\\n    </ntx-card-simple>\\r\\n    <ntx-card-simple title=\\\"{{'Progress bar with level mark' | uppercase }}\\\" subtitle=\\\"{{ '<ntx-progress-bar-level [value]=75>' }}\\\">\\r\\n      <ntx-progress-bar-level [value]=\\\"'75'\\\" ></ntx-progress-bar-level>\\r\\n    </ntx-card-simple>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpLXBhZ2VzL3Byb2dyZXNzLWJhci1sZXZlbC9leGFtcGxlcy9leGFtcGxlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-examples',\r\n\ttemplateUrl: './examples.component.html',\r\n\tstyleUrls: ['./examples.component.scss']\r\n})\r\nexport class ExamplesComponent implements OnInit {\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ExamplesComponent } from './examples/examples.component';\r\nimport { DocumentationComponent } from './documentation/documentation.component';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\t\tpath: 'examples',\r\n\t\t\tcomponent: ExamplesComponent\r\n\t},\r\n\t{\r\n\t\t\tpath: 'documentation',\r\n\t\t\tcomponent: DocumentationComponent\r\n\t},\r\n\t{\r\n\t\t\tpath: '',\r\n\t\t\tredirectTo: 'examples',\r\n\t\t\tpathMatch: 'full'\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class ProgressBarLevelRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n\tNtxProgressBarModule,\r\n\tNtxCardsModule\r\n} from '@netex/ux-components';\r\n\r\nimport { ProgressBarLevelRoutingModule } from './progress-bar-level-routing.module';\r\nimport { DocumentationComponent } from './documentation/documentation.component';\r\nimport { ExamplesComponent } from './examples/examples.component';\r\nimport { MatExpansionModule } from '@angular/material';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tNtxProgressBarModule,\r\n\t\tNtxCardsModule,\r\n\t\tProgressBarLevelRoutingModule,\r\n\t\tMatExpansionModule\r\n\t],\r\n\tdeclarations: [DocumentationComponent, ExamplesComponent]\r\n})\r\nexport class ProgressBarLevelModule { }\r\n"],"sourceRoot":""}