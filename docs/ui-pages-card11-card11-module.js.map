{"version":3,"sources":["webpack:///./src/app/ui-pages/card11/card11-routing.module.ts","webpack:///./src/app/ui-pages/card11/card11.module.ts","webpack:///./src/app/ui-pages/card11/documentation/documentation.component.html","webpack:///./src/app/ui-pages/card11/documentation/documentation.component.scss","webpack:///./src/app/ui-pages/card11/documentation/documentation.component.ts","webpack:///./src/app/ui-pages/card11/examples/examples.component.html","webpack:///./src/app/ui-pages/card11/examples/examples.component.scss","webpack:///./src/app/ui-pages/card11/examples/examples.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AACW;AACe;AAEjF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8EAAiB;KAC7B;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,6FAAsB;KAClC;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,UAAU;QACtB,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAMF;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAJ/B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;ACzBS;AACM;AAEe;AACmB;AACf;AAIpC;AACyB;AAWvD;IAAA;IAA4B,CAAC;IAAhB,YAAY;QATxB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,6FAAsB,EAAE,8EAAiB,CAAC;YACzD,OAAO,EAAE;gBACP,4DAAY;gBACZ,0EAAmB;gBACnB,mEAAc;gBACd,oEAAkB;aACnB;SACF,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrBzB,86DAA86D,SAAS,0YAA0Y,SAAS,iiB;;;;;;;;;;;ACA10E,+DAA+D,uL;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAmDE;QAjDA,UAAK,GAAG,6iCAwBD,CAAC;QAER,UAAK,GAAG,+lBAqBN,CAAC;IAEa,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IAtDU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,2IAA6C;;SAE9C,CAAC;;OACW,sBAAsB,CAwDlC;IAAD,6BAAC;CAAA;AAxDkC;;;;;;;;;;;;ACPnC,qIAAqI,+L;;;;;;;;;;;ACArI,+DAA+D,uK;;;;;;;;;;;;;;;;;ACAb;AAQlD;IAIC;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IAED,mCAAO,GAAP,UAAQ,CAAS;QAChB,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IAED,+CAAmB,GAAnB,UAAoB,KAAqB;QACxC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,2CAAe,GAAf,UAAgB,CAAS;QACxB,OAAO,IAAI,CAAC,iBAAiB,KAAK,CAAC,CAAC;IACrC,CAAC;IAnBW,iBAAiB;QAL7B,+DAAS,CAAC;YACV,QAAQ,EAAE,cAAc;YACxB,4HAAwC;;SAExC,CAAC;;OACW,iBAAiB,CAqB7B;IAAD,wBAAC;CAAA;AArB6B","file":"ui-pages-card11-card11-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ExamplesComponent } from './examples/examples.component';\r\nimport { DocumentationComponent } from './documentation/documentation.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'examples',\r\n    component: ExamplesComponent\r\n  },\r\n  {\r\n    path: 'documentation',\r\n    component: DocumentationComponent\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'examples',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Card11RoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Card11RoutingModule } from './card11-routing.module';\r\nimport { DocumentationComponent } from './documentation/documentation.component';\r\nimport { ExamplesComponent } from './examples/examples.component';\r\n\r\nimport {\r\n  NtxCardsModule\r\n} from '@netex/ux-components';\r\nimport { MatExpansionModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  declarations: [DocumentationComponent, ExamplesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    Card11RoutingModule,\r\n    NtxCardsModule,\r\n    MatExpansionModule\r\n  ]\r\n})\r\nexport class Card11Module { }\r\n","module.exports = \"<div class=\\\"page-layout\\\">\\r\\n  <div class=\\\"page-container documentation\\\">\\r\\n    <p class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Cards</p>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      ntx-card is a content container for text, photos, and actions in the context of a single subject.\\r\\n    </p>\\r\\n\\r\\n    <p class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Card 11</p>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      Use <span class=\\\"documentation-code\\\">ntx-card11</span> if you need a group of selectable cards by radiobuttons and have a title, a description, a counter number and a progress bar.\\r\\n    </p>\\r\\n\\r\\n    <p class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Configuration</p>\\r\\n    <p class=\\\"documentation-text\\\">\\r\\n      In .ts file of each component, we have added a click event to show the style of the cards when they are selected.\\r\\n    </p>\\r\\n\\r\\n    <p class=\\\"utils--text-32 utils--margin-top-60 utils--margin-bottom-0\\\">Card11 v4.0.1</p>\\r\\n    <ul class=\\\"documentation-text\\\">\\r\\n      <li>One-way data binding from input element's <span class=\\\"documentation-code\\\">data</span> property.</li>\\r\\n      <li>Bind <span class=\\\"documentation-code\\\">ngClass</span> directive to element's <span class=\\\"documentation-code\\\">selected</span> property.</li>\\r\\n      <li>Define an <span class=\\\"documentation-code\\\">output(@Output)</span> element's <span class=\\\"documentation-code\\\">radiobuttonChange</span> property.</li>\\r\\n    </ul>\\r\\n\\r\\n    <div class=\\\"documentation-wrapper-pre\\\">\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              ux-components/src/lib/ntx-cards/card11/card11.component.html\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <pre class=\\\"documentation-pre\\\">\\r\\n            <code> {{ code1 }}</code>\\r\\n          </pre>\\r\\n        </mat-expansion-panel>\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              ux-components/src/lib/ntx-cards/card11/card11.component.ts\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <pre class=\\\"documentation-pre\\\">\\r\\n            <code> {{ code2 }}</code>\\r\\n          </pre>\\r\\n        </mat-expansion-panel>\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              ux-components/src/lib/ntx-cards/card11/card11.component.scss\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <pre class=\\\"documentation-pre\\\">/* No code summary available. Get entire code from repository*/</pre>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpLXBhZ2VzL2NhcmQxMS9kb2N1bWVudGF0aW9uL2RvY3VtZW50YXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-documentation',\r\n  templateUrl: './documentation.component.html',\r\n  styleUrls: ['./documentation.component.scss']\r\n})\r\nexport class DocumentationComponent implements OnInit {\r\n\r\n  code1 = `\r\n  <div class=\"card11\">\r\n    <mat-radio-button class=\"radiobutton-group__radiobutton\"\r\n                      [color]=\"'primary'\"\r\n                      [value]=\"value\"\r\n                      (change)=\"onChangeRadiobutton($event)\"\r\n                      [ngClass]=\"{'check-selected':selected}\">\r\n    </mat-radio-button>\r\n    <mat-card class=\"card11__card\">\r\n      <mat-card-header>\r\n        <div class=\"card11__number\">\r\n          <span>{{ data.rank }}</span>\r\n        </div>\r\n        <div class=\"card11__content\">\r\n          <mat-card-title class=\"card11__title\">\r\n            <span class=\"utils--truncate1\" [matTooltip]=\"data.title\">{{ data.title }}</span>\r\n          </mat-card-title>\r\n          <mat-card-subtitle class=\"card11__subtitle\">\r\n            <span class=\"utils--truncate2\" [matTooltip]=\"data.description\">{{ data.description}}</span>\r\n          </mat-card-subtitle>\r\n          <ntx-progress-bar [color]=\"'primary'\" [value]=\"'52'\"></ntx-progress-bar>\r\n        </div>\r\n      </mat-card-header>\r\n    </mat-card>\r\n  </div>`;\r\n\r\n  code2 = `\r\n  @Component({\r\n    ...\r\n  })\r\n  export class Card11Component implements OnInit {\r\n\r\n    data: any = {\r\n      title: 'Card title lorem ipsum dolor sit amet consectetuer adipiscing',\r\n      description: 'Card subtitle lorem ipsum dolor sit amet consectetuer lorem ipsum dolor sit amet consectetuer',\r\n      rank: '6'\r\n    };\r\n\r\n    @Input() color: string;\r\n    @Input() value: number;\r\n    @Input() selected: boolean;\r\n    @Output() radiobuttonChange = new EventEmitter<MatRadioChange>();\r\n    ...\r\n    onChangeRadiobutton(event: MatRadioChange) {\r\n      this.radiobuttonChange.emit(event);\r\n    }\r\n\r\n  }`;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"page-layout\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <ntx-card11 *ngFor=\\\"let card of counter(5); let i = index\\\" \\r\\n        [value]=\\\"i\\\"\\r\\n        (radiobuttonChange)=\\\"onRadiobuttonChange($event)\\\"\\r\\n        [selected]=\\\"checkIfSelected(i)\\\"></ntx-card11>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpLXBhZ2VzL2NhcmQxMS9leGFtcGxlcy9leGFtcGxlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatRadioChange } from '@angular/material';\r\n\r\n@Component({\r\n\tselector: 'app-examples',\r\n\ttemplateUrl: './examples.component.html',\r\n\tstyleUrls: ['./examples.component.scss']\r\n})\r\nexport class ExamplesComponent implements OnInit {\r\n\r\n\tselectedCardIndex: number;\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tcounter(i: number) {\r\n\t\treturn new Array(i);\r\n\t}\r\n\r\n\tonRadiobuttonChange(event: MatRadioChange) {\r\n\t\tthis.selectedCardIndex = event.value;\r\n\t}\r\n\r\n\tcheckIfSelected(i: number) {\r\n\t\treturn this.selectedCardIndex === i;\r\n\t}\r\n\r\n}\r\n"],"sourceRoot":""}